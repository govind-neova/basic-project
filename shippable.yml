# Language setting http://docs.shippable.com/ci/languages/node/
language: node_js

# use this to control what branches get built.
# http://docs.shippable.com/ci/advancedOptions/branches/
branches:
  only:
    - master

integrations:
  key:
    - integrationName: pem_key
      type: pemKey
  generic:
    - integrationName: user@ipaddress

# using pre-defined build variables
# full list http://docs.shippable.com/ci/advancedOptions/environmentVariables/
env:
  global:
          #    - TEST_RESULTS_DIR=$SHIPPABLE_REPO_DIR/shippable/testresults
          #    - CODE_COVERAGE_DIR=$SHIPPABLE_REPO_DIR/shippable/codecoverage
          #    - TESTS_LOC_DIR=$SHIPPABLE_REPO_DIR/tests
          #    - MOD_LOC=$SHIPPABLE_REPO_DIR/node_modules/.bin/
          #    - Access_key=$(shipctl get_integration_resource_field SONAR-SERVER "Key")

build:

  # http://docs.shippable.com/ci/shippableyml/#ci
  ci:
    # npm mirrors can sometimes be flacky, better to use shippable_retry
    # http://docs.shippable.com/ci/advancedOptions/retry/
    #- shippable_retry npm install
    #- mkdir -p $TEST_RESULTS_DIR && mkdir -p $CODE_COVERAGE_DIR
    #- pushd $TESTS_LOC_DIR
    #- $MOD_LOC/mocha --recursive "$TESTS_LOC_DIR/**/*.spec.js" -R mocha-junit-reporter --reporter-options mochaFile=$TEST_RESULTS_DIR/testresults.xml
    #- $MOD_LOC/istanbul --include-all-sources cover -root "$SHIPPABLE_REPO_DIR/routes" $SHIPPABLE_REPO_DIR/node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive "$TESTS_LOC_DIR/**/*.spec.js"
    #- $MOD_LOC/istanbul report cobertura --dir $CODE_COVERAGE_DIR
    #- popd
    - echo $(shipctl get_integration_resource_field pem_keys "Key")
    - cd /tmp/ssh
    - ls -l 
    - date
    - ip r
    - printenv
    - echo $user_and_ip_address
    - printenv
    - pwd
    - echo $REPOSITORY_URL >> sshenv
    - cat sshenv
    - scp -i pemKey -pr sshenv $user_and_ip_address:~/.ssh/sshenvironment
      #- ssh -i /tmp/ssh/pemKey ubuntu@54.225.13.26 -t "cd /home/ubuntu/git-projects/scripts-repository && ./sonar.sh"
    - ssh -i pemKey $user_and_ip_address -t "cd /home/ubuntu/git-projects/scripts-repository && ./sonar.sh https://github.com/govind-neova/puppeteer.git govind-test"
  on_success:
    - echo "Job is successful"
  on_failure:  
    - echo "Job is failed"

#jobs:
#  - name: myCustomJob
#    type: runSh
#    integrations:
#      - SONAR-SERVER
#    steps:
#      - TASKS:
#        - script: shipctl get_integration_keys "SONAR-SERVER"

#resources:
#  - name: pem_keys
#    type: integration
#    integration: "SONAR-SERVER"
#
#jobs:
#  - name: deploy_war_vm_ans
#    type: runSh
#    steps:
#      - IN: pem_keys
#        switch: off
#      - TASK:
#          name: deploy_war
#          script:
#            - echo "$(shipctl get_integration_resource_field SONAR-SERVER "Keys")"
#

